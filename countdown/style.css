/* Root CSS variables for theming */
:root {
  --bg-color: #000000;
  --accent-color: #00b49a;
  --text-color: #ffffff;
  --danger-color: #e53935;
  --light-accent: rgba(0, 180, 154, 0.15);
  --flash-color: #ff4444;
}

html, body {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  background-color: var(--bg-color);
  color: var(--text-color);
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  overflow: hidden;
}

#app {
  position: relative;
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Settings button */
#settingsBtn {
  position: absolute;
  bottom: 10px;
  left: 10px;
  background: transparent;
  border: none;
  color: var(--accent-color);
  font-size: 24px;
  cursor: pointer;
  z-index: 20;
}
#settingsBtn #syncIndicator {
  position: absolute;
  top: 0;
  right: -6px;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: orange;
}
.hidden { display: none !important; }

/* Views: setup, countdown, finished */
.view {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  transition: opacity 0.3s ease;
}

/* Time selectors */
#timeSelectors {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  max-width: 480px;
  margin-bottom: 20px;
  position: relative;
  height: 200px;
}
.timeSelector {
  flex: 1;
  position: relative;
  overflow-y: scroll;
  height: 100%;
  scrollbar-width: none;
}
.timeSelector::-webkit-scrollbar { width: 0; height: 0; }

.timeSelector ul {
  list-style: none;
  margin: 0;
  /* We don't apply fixed vertical padding here. The JavaScript function
     `centreSelectorLists()` dynamically calculates and applies top and bottom
     padding based on the container height and list item height to ensure
     that the items align with the highlight bar. Leaving this at zero
     prevents the default value from being misaligned. */
  /* Padding is set dynamically via the centreSelectorLists() function in
     script.js.  Leave as zero here so that the dynamic calculation is
     accurate. */
  padding: 0;
  text-align: center;
}
.timeSelector li {
  padding: 10px 0;
  font-size: 32px;
  opacity: 0.4;
  transition: opacity 0.2s;
}
.timeSelector li.selected {
  font-size: 40px;
  opacity: 1;
  color: var(--accent-color);
}

/* Overlay highlight bar on selectors */
#timeSelectors::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 0;
  right: 0;
  transform: translateY(-50%);
  height: 50px;
  background-color: var(--light-accent);
  pointer-events: none;
  border-radius: 10px;
}

/* Preset buttons */
#presetContainer {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
}
.presetBtn {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  border: none;
  background-color: rgba(255,255,255,0.1);
  color: var(--text-color);
  font-size: 14px;
  cursor: pointer;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: background-color 0.2s;
}
.presetBtn:hover {
  background-color: var(--light-accent);
}

.presetBtn.selected {
  border: 2px solid var(--accent-color);
}

/* Action buttons */
.actionBtn, .dangerBtn {
  padding: 12px 24px;
  font-size: 18px;
  border-radius: 30px;
  border: none;
  cursor: pointer;
  margin: 10px;
  transition: background-color 0.2s;
}
.actionBtn {
  background-color: var(--accent-color);
  color: #000;
}
.actionBtn:hover {
  background-color: #00997f;
}
.dangerBtn {
  background-color: var(--danger-color);
  color: #fff;
}
.dangerBtn:hover {
  background-color: #c62828;
}

/* Progress ring and countdown */
#progressRing {
  position: relative;
  width: 250px;
  height: 250px;
  margin-bottom: 40px;
}
#progressRing svg {
  width: 100%;
  height: 100%;
  transform: rotate(-90deg);
}
#progressRing circle {
  fill: none;
  stroke-width: 12;
  stroke-linecap: round;
}
#progressBg {
  stroke: rgba(255,255,255,0.1);
}
#progressBar {
  stroke: var(--accent-color);
  stroke-dasharray: 565.48;
  stroke-dashoffset: 565.48;
  transition: stroke-dashoffset 0.1s linear;
}
#timeRemaining {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  font-size: 48px;
  font-weight: bold;
  color: var(--text-color);
}
#endTime {
  position: absolute;
  bottom: 10px;
  width: 100%;
  text-align: center;
  font-size: 16px;
  color: rgba(255,255,255,0.7);
}

/* Active buttons layout */
#activeButtons {
  display: flex;
  gap: 20px;
}

/* Finished message */
#finishedContainer {
  text-align: center;
}
#finishedMessage {
  font-size: 32px;
  margin-bottom: 10px;
  color: var(--accent-color);
}
#elapsedTime {
  font-size: 48px;
  margin-bottom: 20px;
}
#finishButtons {
  display: flex;
  gap: 20px;
}

/* Pause overlay */
.overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 100;
}
.overlayContent {
  background-color: var(--bg-color);
  padding: 20px;
  border-radius: 10px;
  text-align: center;
  box-shadow: 0 0 10px rgba(0,0,0,0.5);
}
.overlayContent input {
  padding: 10px;
  font-size: 16px;
  margin-bottom: 10px;
  width: 100%;
  border: 1px solid var(--accent-color);
  border-radius: 5px;
  background: #111;
  color: var(--text-color);
}

/* Settings panel */
#settingsPanel {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  height: 80%;
  background-color: #111;
  color: var(--text-color);
  border-top-left-radius: 20px;
  border-top-right-radius: 20px;
  box-shadow: 0 -2px 10px rgba(0,0,0,0.5);
  display: flex;
  flex-direction: column;
  transform: translateY(100%);
  transition: transform 0.3s ease;
  z-index: 50;
  overflow-y: auto;
}
#settingsPanel.open {
  transform: translateY(0);
}
#settingsHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px 20px;
  border-bottom: 1px solid rgba(255,255,255,0.1);
}
#settingsHeader h2 {
  margin: 0;
}
#settingsHeader button {
  font-size: 24px;
  background: transparent;
  border: none;
  color: var(--text-color);
  cursor: pointer;
}
#settingsContent {
  padding: 15px 20px;
  flex: 1;
  overflow-y: auto;
}
.settingGroup {
  margin-bottom: 20px;
}
.settingGroup label {
  display: block;
  margin-bottom: 5px;
  font-weight: bold;
}
.presetInputs {
  display: flex;
  gap: 10px;
}
.presetInputs input {
  flex: 1;
  padding: 8px;
  border: 1px solid rgba(255,255,255,0.3);
  border-radius: 5px;
  background-color: #222;
  color: var(--text-color);
}
.colorInputs {
  display: flex;
  gap: 10px;
}
.colorInputs div {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}
.colorInputs input {
  width: 70px;
  height: 35px;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

.passwordWrapper {
  display: flex;
  align-items: center;
  gap: 5px;
}
.passwordWrapper input {
  flex: 1;
  padding: 8px;
  border: 1px solid rgba(255,255,255,0.3);
  border-radius: 5px;
  background-color: #222;
  color: var(--text-color);
}
.passwordWrapper .togglePw {
  background: transparent;
  border: none;
  color: var(--accent-color);
  cursor: pointer;
  font-size: 20px;
}

/* About section */
.about p {
  font-size: 14px;
  line-height: 1.4;
  margin-bottom: 10px;
}

/* Sync status text */
#syncStatus {
  font-size: 12px;
  color: orange;
}

/* Flashing/pulse animations for end-of-timer */
@keyframes flash-bg {
  0%, 50%, 100% { background-color: var(--bg-color); }
  25%, 75% { background-color: var(--flash-color); }
}
@keyframes pulse-bg {
  0% { background-color: var(--bg-color); }
  50% { background-color: var(--flash-color); }
  100% { background-color: var(--bg-color); }
}
body.flash-active {
  animation: flash-bg 1s infinite;
}
body.pulse-active {
  animation: pulse-bg 2s infinite;
}

@media (max-width: 600px) {
  #timeRemaining {
    font-size: 36px;
  }
  .timeSelector li {
    font-size: 24px;
  }
  .timeSelector li.selected {
    font-size: 32px;
  }
  .presetBtn {
    width: 60px;
    height: 60px;
    font-size: 12px;
  }
  .actionBtn, .dangerBtn {
    font-size: 16px;
  }
}